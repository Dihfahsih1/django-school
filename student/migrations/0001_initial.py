# Generated by Django 2.0.4 on 2018-05-30 17:53

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_month', models.CharField(default='June', max_length=50)),
                ('attendance_year', models.IntegerField(default=2018)),
                ('attendance_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=20)),
                ('batch_start_time', models.TimeField()),
                ('batch_end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Batch_Levels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_name', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'level',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='student.Batch')),
            ],
        ),
        migrations.CreateModel(
            name='Fees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_name', models.CharField(max_length=100)),
                ('fee_total', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=250)),
                ('city', models.CharField(max_length=50)),
                ('phone_number', models.IntegerField()),
                ('relation', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=250)),
                ('city', models.CharField(max_length=100)),
                ('emailID', models.CharField(max_length=50)),
                ('phone_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_belt_from', models.CharField(choices=[('White', 'White'), ('Yellow', 'Yellow'), ('Yellow Black', 'Yellow Black'), ('Green', 'Green'), ('Green Black', 'Green Black'), ('Purple', 'Purple'), ('Purple Black', 'Purple Black'), ('Orange', 'Orange'), ('Orange Black', 'Orange Black'), ('Blue', 'Blue'), ('Blue Black', 'Blue Black'), ('Brown', 'Brown'), ('Brown Black', 'Brown Black'), ('Red', 'Red'), ('Red Black', 'Red Black'), ('Black', 'Black')], default='White', max_length=50)),
                ('progress_belt_to', models.CharField(choices=[('White', 'White'), ('Yellow', 'Yellow'), ('Yellow Black', 'Yellow Black'), ('Green', 'Green'), ('Green Black', 'Green Black'), ('Purple', 'Purple'), ('Purple Black', 'Purple Black'), ('Orange', 'Orange'), ('Orange Black', 'Orange Black'), ('Blue', 'Blue'), ('Blue Black', 'Blue Black'), ('Brown', 'Brown'), ('Brown Black', 'Brown Black'), ('Red', 'Red'), ('Red Black', 'Red Black'), ('Black', 'Black')], max_length=50)),
                ('progress_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_color', models.CharField(choices=[('White', 'White'), ('Yellow', 'Yellow'), ('Yellow Black', 'Yellow Black'), ('Green', 'Green'), ('Green Black', 'Green Black'), ('Purple', 'Purple'), ('Purple Black', 'Purple Black'), ('Orange', 'Orange'), ('Orange Black', 'Orange Black'), ('Blue', 'Blue'), ('Blue Black', 'Blue Black'), ('Brown', 'Brown'), ('Brown Black', 'Brown Black'), ('Red', 'Red'), ('Red Black', 'Red Black'), ('Black', 'Black')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=250)),
                ('city', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('date_of_joining', models.DateField(default=django.utils.timezone.now)),
                ('stu_phone_number', models.IntegerField()),
                ('attendance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.Attendance')),
                ('fee', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.Fees')),
                ('guardian', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.Guardian')),
                ('progress', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.Progress')),
                ('rank', models.OneToOneField(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.Rank')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField()),
                ('transaction_amount', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='fees',
            name='transaction',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='student.Transaction'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='student.Student'),
        ),
        migrations.AddField(
            model_name='batch',
            name='instructor',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.Instructor'),
        ),
        migrations.AddField(
            model_name='batch',
            name='level',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='levels', to='student.Batch_Levels'),
        ),
    ]
